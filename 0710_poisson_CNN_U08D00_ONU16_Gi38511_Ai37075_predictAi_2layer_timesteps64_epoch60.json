{
  "architecture": {
    "backend": "tensorflow",
    "class_name": "Functional",
    "config": {
      "input_layers": [
        [
          "input_1",
          0,
          0
        ],
        [
          "input_2",
          0,
          0
        ]
      ],
      "layers": [
        {
          "class_name": "InputLayer",
          "config": {
            "batch_input_shape": [
              null,
              64
            ],
            "dtype": "float32",
            "name": "input_1",
            "ragged": false,
            "sparse": false
          },
          "inbound_nodes": [],
          "name": "input_1"
        },
        {
          "class_name": "InputLayer",
          "config": {
            "batch_input_shape": [
              null,
              64
            ],
            "dtype": "float32",
            "name": "input_2",
            "ragged": false,
            "sparse": false
          },
          "inbound_nodes": [],
          "name": "input_2"
        },
        {
          "class_name": "Reshape",
          "config": {
            "dtype": "float32",
            "name": "reshape",
            "target_shape": [
              64,
              1
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "input_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "reshape"
        },
        {
          "class_name": "Reshape",
          "config": {
            "dtype": "float32",
            "name": "reshape_1",
            "target_shape": [
              64,
              1
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "input_2",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "reshape_1"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "reshape",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d_2",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "reshape_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d_2"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d_2",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d_2",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d_2"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d_1",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d_1"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d_3",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d_2",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d_3"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d_1",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d_1"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d_3",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d_3",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d_3"
        },
        {
          "class_name": "Flatten",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "flatten",
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "flatten"
        },
        {
          "class_name": "Flatten",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "flatten_1",
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d_3",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "flatten_1"
        },
        {
          "class_name": "Concatenate",
          "config": {
            "axis": -1,
            "dtype": "float32",
            "name": "concatenate",
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "flatten",
                0,
                0,
                {}
              ],
              [
                "flatten_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "concatenate"
        },
        {
          "class_name": "Dense",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "dtype": "float32",
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "RandomUniform",
              "config": {
                "maxval": 0.05,
                "minval": -0.05,
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "name": "dense",
            "trainable": true,
            "units": 1,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "concatenate",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "dense"
        }
      ],
      "name": "functional_1",
      "output_layers": [
        [
          "dense",
          0,
          0
        ]
      ]
    },
    "keras_version": "2.6.0"
  },
  "hash": "a53d4e4682f07f68022b88e1feb3316956a3344582b5220efecacdb6368b43e4",
  "image_data_format": "channels_last",
  "input_shapes": [
    [
      64
    ],
    [
      64
    ]
  ],
  "output_shapes": [
    [
      1
    ]
  ],
  "tests": [
    {
      "inputs": [
        {
          "shape": [
            64
          ],
          "values": [
            "XrUNvg9aX7/TYmu8u8Itv5tAj7+jSsI/YkPkPoaXpD7uP1K/vLfJv8zIeb2jsj8/gpzwPfoTgL+MRvE93TR5v0eVbT8g3+2/NcUDvRgGYb7yBTY/1ZuRP7DDxr/cs9A/kwRYvrySoT8xwBG/ZqgNQCAmaL4bn6G+6GZJvxTTPD821tm+UJYFQMIJib8eSMA/IasyPrmjM0Dl7LK+PKWSv2h51r7Rmfo+iXNGv+Imcz7OmIK/iXnDPxcDED/VwAG/gmkHPjeGKkCod7I+rQ1yPzcnTb+iL9M+PiljPjYzRcDCITc/GgYyvkiQPj6QxAY+YFeSPxCcqb5xDNc+SO0Tvw=="
          ]
        },
        {
          "shape": [
            64
          ],
          "values": [
            "cLGbPdCL9r5O0uy+kPEiPzDuSb3ojQY//ZP0PexLzz96yUm//kLaP7XlNb/JZRe/1TNMvvLPnT9CRdO+/f1EvnKozT95SaK+PEtDP/EglL+c/Ee/GbMivlXpyj2pfqa/pau4vzDRRz73UF2+SPEYv72Xqz3iLcS/gj8/v3rQmj+09xG+cD0Nv4UdwT2DJRzAWlsBQE3TOz8ST4W/q+yFvtexdb8mX6Q+JezHPwOwCb+bY5G/ij3OvuKmFz/qKwq/RqAqPuclor/Eiay+7BkJv7oxUL/URra9PCK0v3kGG7+tNyVA3lO+P61vfT/4QXk/g7rpPos15LzKPm8/tb4Jvg=="
          ]
        }
      ],
      "outputs": [
        {
          "shape": [
            1
          ],
          "values": [
            "AAAAAA=="
          ]
        }
      ]
    }
  ],
  "trainable_params": {
    "conv1d": {
      "bias": [
        "AAAAAAAAAADqtgy9AAAAAAAAAAAGFAi6AAAAAAAAAAAAAAAA/AKwvQAAAACXJHe8AAAAAG3d4TkAAAAACsqMOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ1mtTsAAAAAQZmeOgAAAAAAAAAAtofhuAAAAAB9cHC7fB8sO+xKvjo="
      ],
      "weights": [
        "IKnOvaydnb2aJwo+XEiCvnLAj76yMs89JpvYvkN+g75g6XW+MaisPnBEib54YK07qOCVvvLDET709rC+NdbIPrkm0r7Hipm+nO6uvitxvr6KyLy+UA+evXkUDj4JbIe+E9QPPvT+s76Misa+gNeFPtZdMb5JhMQ+VzGPPm6efD4="
      ]
    },
    "conv1d_1": {
      "bias": [
        "rFDkvCUvLLxUULu781MavKMbtrvQvom7IDBivDfSl7zXLHm7ATtUvEPDDL4kntW7WLpXvNv7ursDgAW+CGSkPXJc1LuswL67PB62u0jlFT3KDra7gkrTuTRXs7s2Ngq89WzfulqPlbsihgG9rWdHvCeIorsdcEO6HhQbPmhJ1bs="
      ],
      "weights": [
        "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"
      ]
    },
    "conv1d_2": {
      "bias": [
        "GJuXuQAAAAAAAAAAlZZbuysmrrsfp/M8AAAAANarpbsAAAAAAAAAAIzrJDsAAAAAAAAAAAAAAADC3+U6IHqPvAAAAAAAAAAAAAAAAL6QSrzXhsS8AAAAAJCbbryWrBW6ibLnu9dLiboAAAAAMwnWvAAAAAAAAAAAagcTuwAAAAA="
      ],
      "weights": [
        "YdrHPugr/r0eYAO+A4KSPnOerD5Lztc9Q1M2vrcCmLtw3Mm8paw2vmJ0Qz4a1xm+Y/w6vn7ftL49H70+aY+GPJdmP74ieAm+clV7vkGTUj4ETqM8pZupvoNZdjxHX7o+mJ6RPqXE/T0AJZq9UBCVPV/Tzr4WfqO+4HHIPjS/sr4="
      ]
    },
    "conv1d_3": {
      "bias": [
        "AAAAAIn/JLzMZki8DXhqvJuD67z/0Oi77aFQvbDUt7qeURu8q8uxvJRUuTt4gwO8FFyovIpcZ7tXxKW8wrGkvAAAAABdZRq8a+s5vMVqH71JVwM83CmyvE9r77wjtLS70SzDPbHsG73/XlK8z4eVvJTbOLwpFbI9uSMwvjx2ALw="
      ],
      "weights": [
        "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"
      ]
    },
    "dense": {
      "bias": [
        "VvOyPQ=="
      ],
      "weights": [
        "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"
      ]
    }
  }
}
