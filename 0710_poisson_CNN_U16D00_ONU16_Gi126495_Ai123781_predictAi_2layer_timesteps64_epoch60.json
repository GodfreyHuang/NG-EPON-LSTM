{
  "architecture": {
    "backend": "tensorflow",
    "class_name": "Functional",
    "config": {
      "input_layers": [
        [
          "input_1",
          0,
          0
        ],
        [
          "input_2",
          0,
          0
        ]
      ],
      "layers": [
        {
          "class_name": "InputLayer",
          "config": {
            "batch_input_shape": [
              null,
              64
            ],
            "dtype": "float32",
            "name": "input_1",
            "ragged": false,
            "sparse": false
          },
          "inbound_nodes": [],
          "name": "input_1"
        },
        {
          "class_name": "InputLayer",
          "config": {
            "batch_input_shape": [
              null,
              64
            ],
            "dtype": "float32",
            "name": "input_2",
            "ragged": false,
            "sparse": false
          },
          "inbound_nodes": [],
          "name": "input_2"
        },
        {
          "class_name": "Reshape",
          "config": {
            "dtype": "float32",
            "name": "reshape",
            "target_shape": [
              64,
              1
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "input_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "reshape"
        },
        {
          "class_name": "Reshape",
          "config": {
            "dtype": "float32",
            "name": "reshape_1",
            "target_shape": [
              64,
              1
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "input_2",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "reshape_1"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "reshape",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d_2",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "reshape_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d_2"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d_2",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d_2",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d_2"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d_1",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d_1"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d_3",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d_2",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d_3"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d_1",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d_1"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d_3",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d_3",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d_3"
        },
        {
          "class_name": "Flatten",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "flatten",
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "flatten"
        },
        {
          "class_name": "Flatten",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "flatten_1",
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d_3",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "flatten_1"
        },
        {
          "class_name": "Concatenate",
          "config": {
            "axis": -1,
            "dtype": "float32",
            "name": "concatenate",
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "flatten",
                0,
                0,
                {}
              ],
              [
                "flatten_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "concatenate"
        },
        {
          "class_name": "Dense",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "dtype": "float32",
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "RandomUniform",
              "config": {
                "maxval": 0.05,
                "minval": -0.05,
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "name": "dense",
            "trainable": true,
            "units": 1,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "concatenate",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "dense"
        }
      ],
      "name": "functional_1",
      "output_layers": [
        [
          "dense",
          0,
          0
        ]
      ]
    },
    "keras_version": "2.6.0"
  },
  "hash": "199fedaba49af1594ce13e346675c29af328c6b77f1910045080fa5bd8969177",
  "image_data_format": "channels_last",
  "input_shapes": [
    [
      64
    ],
    [
      64
    ]
  ],
  "output_shapes": [
    [
      1
    ]
  ],
  "tests": [
    {
      "inputs": [
        {
          "shape": [
            64
          ],
          "values": [
            "ZwqwPa7bj7/9bM8/8CsGPwA7xb8jW6U/LomNP+PGxb5OZgXAeAb0v9w6h7/WH5Y/wZtav8bwoD80gco/LuuIvjyuez7Vpoa/qvw2P7YmAUALebm/WBzivRxKsj5VHfK+9cC5Plz3jD8RzUE/ixybPoGEl77veMY+OVuCvv1OEEAoCxi/ixcNQB+2BMAyMta/pFEOvmRlOj+SYlS+JFl3vVQiHj/DUsy+HHScP/6b4r+1OyU/eiAav8auMz//CJI/IXIlv6c3kz1cLS09vUnvvn2ffr96Euk/53jHvrQzB74XlR0/Vgazv22AaD1R8qc+TrqNP5g5Wj9mSYe/72tPPw=="
          ]
        },
        {
          "shape": [
            64
          ],
          "values": [
            "c28ePaQ2gL+ljYU/81QOQP1AJz/kfNu/OlvLviIG9L4baVs/oSShvZcGaz+QjpO+O2mIPxWQ6r69WmU/wCCdvwB9/L+e7OC+fHaev2hfIT85Cdm/vmUTv9EQgb+TJ9E+fD1rP2x8Y78FiGU/5SovPwnI5z7HPbO89WcYPkIJlT6/mATAgwtCvpcDhj/w918+YpccP4mFB78aDRc/MBnnvQIdmT+C9TA/qg4Zv0vMnD8WBKA/gWUdQFXkeD+yMo0+E+6hPoDxRD+03wRAzIcMP0Z3xb6Moie+EqmgP5XRCj8BG4m+IrvKPZ/jCD+tGwU/cculv5QUez/nDI6+KkjVvg=="
          ]
        }
      ],
      "outputs": [
        {
          "shape": [
            1
          ],
          "values": [
            "pvj4Pg=="
          ]
        }
      ]
    }
  ],
  "trainable_params": {
    "conv1d": {
      "bias": [
        "AAAAAAAAAAAAAAAAAAAAAAzr8L0AAAAAAAAAAAAAAAAijdi6eQ4KPAAAAAAamUE7hm+EugAAAADfPIA7AAAAAAAAAADgHSm3AAAAAAAAAAAAAAAADmYRupRTJr1fefi8HoMKOwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA/Sjo="
      ],
      "weights": [
        "3saAvoWcor6uJDq+lHq9vcFO3j4MOte+BeDPvpikVr5afxu7cl6JPsL8Gr6ySbw9clSVPrQKJL5QtZE+dKHlvfILXL6xtZM+lL7Fvl0+sL7cwdK9TeJMParwDD5n4Xk+QfnPPqxnML5u0aC+8nIMvnplgb5BjMy+K9WmvrQOkD4="
      ]
    },
    "conv1d_1": {
      "bias": [
        "jR8DuwAAAAB7cve8GhVJuwSdn7yrv9C6JWfJu2QR/7wpb3q7PMzFvIkUN7ugN309xL1Zui+EjbsAAAAA2SqTvQAAAAAuLsG6DqO0Owofdz3S3hy8vxHYu4vosLxg3qa8thMovEkevb203xm8E1bBuxXwaDxIWBm8tBgOu3X5nLs="
      ],
      "weights": [
        "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"
      ]
    },
    "conv1d_2": {
      "bias": [
        "kklBPAAAAAAsVn68AAAAAMr6yLjr0s26AAAAALbxfDspUwg9AAAAAE6tjb3RSaA7AAAAAHBlPzd8PTe7QJ6kPJfch7wAAAAAAAAAAOAKkroRUFs9OvUlPCcVEDsAAAAAAAAAAAAAAAA1VSu536qTOwAAAAAAAAAAk+UivL8wF7o="
      ],
      "weights": [
        "B+yCPrUBeb46o+08hhJWvroz/j2SqSI+We6QvioyIj6T9qy73StQvr5Tnj5brcc+zLqvvYqpWD5CvCk9XuptPZEzPz5AxUq9nmA/vkYyoD7TrS0+qK/PPsegrz6oWkK9EM1yvcGyz75bCdA+SJ8IP0g5Xb5q+Ye+2kEZPNzW5z4="
      ]
    },
    "conv1d_3": {
      "bias": [
        "AAAAAMbKqLwAAAAAAAAAAAAAAACY4Ki8i/WjvAAAAABJFGC8cm83vEjtnT00F5a8AAAAANWPjDygJK+7f1SJOuwBhrxaWwM+iUDevTGYgLymNZ09cm2lvOBLVLyxNOU6n6rmuyGe3D0ffpW8CQPpOwAAAADtAqo7IklXvIJ7Er0="
      ],
      "weights": [
        "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"
      ]
    },
    "dense": {
      "bias": [
        "usaLPQ=="
      ],
      "weights": [
        "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"
      ]
    }
  }
}
