{
  "architecture": {
    "backend": "tensorflow",
    "class_name": "Functional",
    "config": {
      "input_layers": [
        [
          "input_1",
          0,
          0
        ]
      ],
      "layers": [
        {
          "class_name": "InputLayer",
          "config": {
            "batch_input_shape": [
              null,
              64
            ],
            "dtype": "float32",
            "name": "input_1",
            "ragged": false,
            "sparse": false
          },
          "inbound_nodes": [],
          "name": "input_1"
        },
        {
          "class_name": "Reshape",
          "config": {
            "batch_input_shape": [
              null,
              64
            ],
            "dtype": "float32",
            "name": "reshape",
            "target_shape": [
              64,
              1
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "input_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "reshape"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "reshape",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d"
        },
        {
          "class_name": "Conv1D",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "data_format": "channels_last",
            "dilation_rate": [
              1
            ],
            "dtype": "float32",
            "filters": 32,
            "groups": 1,
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "GlorotUniform",
              "config": {
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "kernel_size": [
              1
            ],
            "name": "conv1d_1",
            "padding": "same",
            "strides": [
              1
            ],
            "trainable": true,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "conv1d_1"
        },
        {
          "class_name": "MaxPooling1D",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "max_pooling1d_1",
            "padding": "valid",
            "pool_size": [
              2
            ],
            "strides": [
              2
            ],
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "conv1d_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "max_pooling1d_1"
        },
        {
          "class_name": "Flatten",
          "config": {
            "data_format": "channels_last",
            "dtype": "float32",
            "name": "flatten",
            "trainable": true
          },
          "inbound_nodes": [
            [
              [
                "max_pooling1d_1",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "flatten"
        },
        {
          "class_name": "Dense",
          "config": {
            "activation": "relu",
            "activity_regularizer": null,
            "bias_constraint": null,
            "bias_initializer": {
              "class_name": "Zeros",
              "config": {}
            },
            "bias_regularizer": null,
            "dtype": "float32",
            "kernel_constraint": null,
            "kernel_initializer": {
              "class_name": "RandomUniform",
              "config": {
                "maxval": 0.05,
                "minval": -0.05,
                "seed": null
              }
            },
            "kernel_regularizer": null,
            "name": "dense",
            "trainable": true,
            "units": 1,
            "use_bias": true
          },
          "inbound_nodes": [
            [
              [
                "flatten",
                0,
                0,
                {}
              ]
            ]
          ],
          "name": "dense"
        }
      ],
      "name": "functional_1",
      "output_layers": [
        [
          "dense",
          0,
          0
        ]
      ]
    },
    "keras_version": "2.6.0"
  },
  "hash": "98c8a3a06b229b96d47389e3fc1e3acc180f633e8221926e6786bdd8b7db5b28",
  "image_data_format": "channels_last",
  "input_shapes": [
    [
      64
    ]
  ],
  "output_shapes": [
    [
      1
    ]
  ],
  "tests": [
    {
      "inputs": [
        {
          "shape": [
            64
          ],
          "values": [
            "otO6PxyZfL9RHo2/k6I4PvEm5j18Loa+HfX7PSaAFz/1lJk9pGF7PhKGID/YZpE/adjxPoZgML8B/dy/rQdkvXrlrz5OoAxArK3kPzD3i78XXKQ/HW1vP+/7JT6g0/c+HPN9v7CVM7+0r6w/pygNPzIKdz5r1ss+mR/Sv/hGQL/oyN6/vcUGvyfgqL5zQIa/4ClkP4/7DD23IRA/iXxIP0XUXL8JHyC/C16uvHCjkr5zdaI/bDafPmLakT8BGsE+KLKtv6qCw7+Tzfy+Tapev4w3rb+DnYw/WRyOP/RNIr+XBxG/iTL9Py0OpLxF7py+yzG2PzWYbT8VG/y/D1S/vw=="
          ]
        }
      ],
      "outputs": [
        {
          "shape": [
            1
          ],
          "values": [
            "nzIzPg=="
          ]
        }
      ]
    }
  ],
  "trainable_params": {
    "conv1d": {
      "bias": [
        "+glDvAAAAAAvb0W8Y2YuvAAAAAAAAAAASIMyuhisrLwAAAAAAAAAAN3E8zsAAAAAAAAAAAAAAAAAAAAAAAAAACOvszoAAAAAAAAAACCbobwAAAAAAAAAAAAAAAAAAAAAdkZAO7ecYjsAAAAAp5cHOwAAAAALmam5AAAAABrhMrw="
      ],
      "weights": [
        "GZq/Puim871BGRE+BTWfPrhdjr4A/bO9W8QWPyiVjD7hWFO+3NtvvmNKvz7sibC9B7ZdvmR0tb3MciG+toHXviLbKD8d1H6+GLYWvYdlHT/gilK+tGm4vmvi0L440PW9B1/sPmECxD4IjFS9MW8IP8wpy77bSK8+gjsxvnxesj4="
      ]
    },
    "conv1d_1": {
      "bias": [
        "1Qzuucr/JbtvOom8AAL9vNGxrrsfhDq8aX01ve4qhbtlWK08edjvuimJKLtHQXK7AAAAAIJvNrxdRAy8tsqQvGmnAz1mkI28TKoQviCd/7yOvee81WWLuwAAAADMJVa7M9y9vMFTRbxUHni8AAAAAAAAAABKdM66mpMIu5KOeLw="
      ],
      "weights": [
        "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"
      ]
    },
    "dense": {
      "bias": [
        "07uzPA=="
      ],
      "weights": [
        "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"
      ]
    }
  }
}
